#!/usr/bin/env python3

import requests,os,sys,yaml,json

# Environment Variables: CID, CSC, TOKEN_URL
def get_token():
  headers = {
    "Content-Type": "application/x-www-form-urlencoded"
  }
  data = {
    "client_id": os.environ.get("CLIENT_ID"),
    "client_secret": os.environ.get("CLIENT_SECRET"),
    "grant_type": "client_credentials",
    "scopes": "openid"
  }
  r = requests.post(os.environ.get("TOKEN_URL"), data=data, headers=headers)
  r.raise_for_status()
  return r.json()["access_token"]

  
headers = {
  "Content-Type": "application/json",
  "Authorization": "Bearer %s" % get_token()
}
if len(sys.argv) >= 3:
  json_list = yaml.safe_load(open(sys.argv[2]).read())
  if not isinstance(json_list, list):
    if len(sys.argv) == 4:
      json_list["content"] = open(sys.argv[3]).read()
    json_list = [ json_list ] 
  for data in json_list:
    print(data)
    r = requests.put("%s%s" % (os.environ.get("PORTAL_URL"), sys.argv[1]), 
                    data=json.dumps(data), 
                    headers=headers)
    r.raise_for_status()
    print("   OK %s %s" % (r.status_code, data))
    if r.status_code == 200 or r.status_code == 201:
      print("      %s" % r.text)
else:
    r = requests.put("%s%s" % (os.environ.get("PORTAL_URL"), sys.argv[1]), 
                    headers=headers)
    r.raise_for_status()
    print("   OK %s" % (r.status_code))
    if r.status_code == 200 or r.status_code == 201:
      print("      %s" % r.text)
